[{"C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\index.js":"1","C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Hooks\\auth.js":"2","C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Routes\\index.js":"3","C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Services\\API\\index.js":"4","C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Containers\\SignupScreen\\index.js":"5","C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Containers\\SigninScreen\\index.js":"6","C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Containers\\ForgetPasswordScreen\\index.js":"7","C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Containers\\ClientsDataScreen\\index.js":"8","C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Containers\\NotFoundScreen\\index.js":"9","C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Containers\\RecoverPasswordScreen\\index.js":"10","C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Services\\API\\settings.js":"11","C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Containers\\SignupScreen\\styles.js":"12","C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Containers\\ForgetPasswordScreen\\styles.js":"13","C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Containers\\SigninScreen\\styles.js":"14","C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Containers\\ClientsDataScreen\\styles.js":"15","C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Containers\\NotFoundScreen\\styles.js":"16","C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Containers\\RecoverPasswordScreen\\styles.js":"17","C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Components\\Form\\index.js":"18","C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Components\\Loading\\index.js":"19","C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Components\\Button\\index.js":"20","C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Components\\Input\\index.js":"21","C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Components\\Form\\styles.js":"22","C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Components\\Loading\\styles.js":"23","C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Components\\Button\\styles.js":"24","C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Components\\Input\\styles.js":"25","C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Services\\MostQI\\index.js":"26","C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Services\\MostQI\\settings.js":"27","C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Containers\\CreateClientScreen\\index.js":"28","C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Utils\\Utils.js":"29","C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Components\\ModalImageCropper\\index.js":"30","C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Components\\ModalImageCropper\\styles.js":"31"},{"size":764,"mtime":1663107698723,"results":"32","hashOfConfig":"33"},{"size":3687,"mtime":1663252264135,"results":"34","hashOfConfig":"33"},{"size":1589,"mtime":1663294166892,"results":"35","hashOfConfig":"33"},{"size":4195,"mtime":1663254011979,"results":"36","hashOfConfig":"33"},{"size":5324,"mtime":1663107698720,"results":"37","hashOfConfig":"33"},{"size":5246,"mtime":1663107698719,"results":"38","hashOfConfig":"33"},{"size":4685,"mtime":1663107698716,"results":"39","hashOfConfig":"33"},{"size":5579,"mtime":1663294291891,"results":"40","hashOfConfig":"33"},{"size":663,"mtime":1663107698717,"results":"41","hashOfConfig":"33"},{"size":5173,"mtime":1663107698718,"results":"42","hashOfConfig":"33"},{"size":384,"mtime":1663252915594,"results":"43","hashOfConfig":"33"},{"size":799,"mtime":1663107698720,"results":"44","hashOfConfig":"33"},{"size":799,"mtime":1663107698716,"results":"45","hashOfConfig":"33"},{"size":799,"mtime":1663107698719,"results":"46","hashOfConfig":"33"},{"size":4862,"mtime":1663257245803,"results":"47","hashOfConfig":"33"},{"size":628,"mtime":1663340141751,"results":"48","hashOfConfig":"33"},{"size":799,"mtime":1663107698718,"results":"49","hashOfConfig":"33"},{"size":437,"mtime":1663107698710,"results":"50","hashOfConfig":"33"},{"size":297,"mtime":1663107698713,"results":"51","hashOfConfig":"33"},{"size":281,"mtime":1663107698709,"results":"52","hashOfConfig":"33"},{"size":422,"mtime":1663107698712,"results":"53","hashOfConfig":"33"},{"size":661,"mtime":1663107698711,"results":"54","hashOfConfig":"33"},{"size":405,"mtime":1663107698714,"results":"55","hashOfConfig":"33"},{"size":568,"mtime":1663107698710,"results":"56","hashOfConfig":"33"},{"size":592,"mtime":1663107698712,"results":"57","hashOfConfig":"33"},{"size":1388,"mtime":1663245600313,"results":"58","hashOfConfig":"33"},{"size":319,"mtime":1663244886856,"results":"59","hashOfConfig":"33"},{"size":1108,"mtime":1663339117339,"results":"60","hashOfConfig":"33"},{"size":199,"mtime":1663296633708,"results":"61","hashOfConfig":"33"},{"size":3404,"mtime":1663341794702,"results":"62","hashOfConfig":"33"},{"size":783,"mtime":1663340887296,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"1wsemm5",{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"67"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"67"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"67"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"67"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"67"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"67"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"98","usedDeprecatedRules":"67"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"67"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\index.js",[],[],[],"C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Hooks\\auth.js",["167"],[],"//Imports react\r\nimport { createContext, useEffect, useState, useContext } from 'react';\r\n\r\n//Services\r\nimport { API } from '../Services/API';\r\n\r\nconst AuthContext = createContext({});\r\n\r\nconst AuthProvider = ({ children }) => {\r\n    //useState\r\n    const [user, setUser] = useState();\r\n    const [errorMessage, setErrorMessage] = useState();\r\n\r\n    useEffect(() => {\r\n        (async () => { \r\n            const userToken = JSON.parse(localStorage.getItem('token'));\r\n            const userStorage = JSON.parse(localStorage.getItem('user'));\r\n\r\n            if (userToken && userToken.expired_in > new Date().toISOString() && userStorage) {\r\n                const dbUser = await API.getUserById(userStorage.id, userToken.access_token);\r\n\r\n                if (dbUser.sucess) {\r\n                    setUser(dbUser.data);\r\n                }\r\n            } else {\r\n                setUser(undefined);\r\n            }\r\n        })();\r\n    }, [user, localStorage]);\r\n\r\n    const signin = async (username, password) => {\r\n        const responseUser = await API.signin(username, password);\r\n        if (responseUser.success) {\r\n            localStorage.setItem('token', JSON.stringify(responseUser.token));\r\n            localStorage.setItem('user', JSON.stringify(responseUser.data));\r\n            setUser(responseUser.data);\r\n            setErrorMessage({});\r\n        } else {\r\n            const key = Object.keys(responseUser.errors)[0];\r\n            setErrorMessage({\r\n                key: [key],\r\n                message: responseUser.errors[key][0]\r\n            });\r\n        }\r\n        return;\r\n    };\r\n\r\n    const signup = async (username, email, password, type) => {\r\n        const responseUser = await API.signup(username, email, password, type);\r\n        if (responseUser.success) {\r\n            setErrorMessage({});\r\n        } else {\r\n            const key = Object.keys(responseUser.errors)[0];\r\n            setErrorMessage({\r\n                key: [key],\r\n                message: responseUser.errors[key][0]\r\n            });\r\n        }\r\n        return responseUser.success;\r\n    };\r\n\r\n    const forgetPassword = async (username, email) => {\r\n        const response = await API.forgetPassword(username, email);\r\n        if (response.success) {\r\n            setErrorMessage({});\r\n        } else {\r\n            const key = Object.keys(response.errors)[0];\r\n            setErrorMessage({\r\n                key: [key],\r\n                message: response.errors[key][0]\r\n            });\r\n        }\r\n        return response.success;\r\n    };\r\n\r\n    const recoverPassword = async (password, confirmPassword, access_token) => {\r\n        const response = await API.recoverPassword(password, confirmPassword, access_token);\r\n        if (response.success) {\r\n            setErrorMessage({});\r\n        } else {\r\n            const key = Object.keys(response.errors)[0];\r\n            setErrorMessage({\r\n                key: [key],\r\n                message: response.errors[key][0]\r\n            });\r\n        }\r\n        return response.success;\r\n    };\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n        setUser(undefined);\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{ user, errorMessage, signed: !!user, signin, signup, logout, forgetPassword, recoverPassword, setErrorMessage }}\r\n        >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n\r\nfunction useAuth() {\r\n    const context = useContext(AuthContext);\r\n\r\n    if (!context) {\r\n        throw new Error('useAuth deve ser usado dentro de um AuthProvider');\r\n    }\r\n\r\n    return context;\r\n}\r\n\r\nexport { AuthProvider, useAuth };","C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Routes\\index.js",["168"],[],"//React imports\r\nimport { BrowserRouter, Route, Routes, useParams } from 'react-router-dom';\r\n\r\n//Hooks\r\nimport { useAuth } from '../Hooks/auth';\r\n\r\n//Screens\r\nimport Signin from '../Containers/SigninScreen';\r\nimport Signup from '../Containers/SignupScreen';\r\nimport ClientsData from '../Containers/ClientsDataScreen';\r\nimport CreateClient from '../Containers/CreateClientScreen';\r\nimport NotFound from '../Containers/NotFoundScreen';\r\nimport ForgetPassword from '../Containers/ForgetPasswordScreen';\r\nimport RecoverPassword from '../Containers/RecoverPasswordScreen';\r\n\r\nconst Private = ({ Item }) => {\r\n    const { signed } = useAuth();\r\n    return signed != 0 ? <Item /> : <Signin />;\r\n};\r\n\r\nconst RecoverPasswordLink = () => {\r\n    let { token } = useParams();\r\n    return <RecoverPassword token={token} />\r\n};\r\n\r\nexport default function RoutesApp() {\r\n    return (\r\n        <BrowserRouter>\r\n            <>\r\n                <Routes>\r\n                    <Route path='/collaborator' element={<Private Item={ClientsData} />} />\r\n                    <Route path='/collaborator/client/create' element={<Private Item={CreateClient} />} />\r\n                    <Route path='/signup' element={<Signup />} />\r\n                    <Route path='/forgetPassword' element={<ForgetPassword />} />\r\n                    <Route path='/recoverPassword/:token' element={<RecoverPasswordLink />} />\r\n                    <Route path='/' element={<Signin />} />\r\n                    <Route path='*' element={<NotFound />} />\r\n                </Routes>\r\n            </>\r\n        </BrowserRouter>\r\n    );\r\n};","C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Services\\API\\index.js",["169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186"],[],"import { URL } from './settings';\r\nimport axios from 'axios';\r\n\r\nexport const API = {\r\n    signin: async (username, password) => {\r\n        const params = {\r\n            'name': username,\r\n            'password': password,\r\n        };\r\n\r\n        let responseAxios = {};\r\n\r\n        await axios.post(`${URL.base}${URL.user.signin}`, params).then((response) => {\r\n            responseAxios = response.data;\r\n        }).catch((error) => {\r\n            responseAxios = error.response.data;\r\n            if (responseAxios['success'] == undefined)\r\n            {\r\n                responseAxios.success = responseAxios.status != 400 || responseAxios.status != 500;\r\n            }\r\n        });\r\n\r\n        return { ...responseAxios };\r\n    },\r\n    signup: async (username, email, password, type) => {\r\n        const params = {\r\n            'name': username,\r\n            'email': email,\r\n            'password': password,\r\n            'type': type\r\n        }\r\n\r\n        let responseAxios = {};\r\n\r\n        await axios.post(`${URL.base}${URL.user.signup}`, params).then((response) => {\r\n            responseAxios = response.data;\r\n        }).catch((error) => {\r\n            responseAxios = error.response.data;\r\n            if (responseAxios['success'] == undefined) {\r\n                responseAxios.success = responseAxios.status != 400 || responseAxios.status != 500;\r\n            }\r\n        });\r\n\r\n        return { ...responseAxios };\r\n    },\r\n    getUserById: async (userId, access_token) => {\r\n        let responseAxios = {};\r\n\r\n        const config = {\r\n            headers: { 'Authorization': `Bearer ${access_token}` }\r\n        };\r\n\r\n        await axios.get(`${URL.base}${URL.user.getById}/${userId}`, config).then((response) => {\r\n            responseAxios = response.data;\r\n        }).catch((error) => {\r\n            responseAxios = error.response.data;\r\n            if (responseAxios['success'] == undefined)\r\n            {\r\n                responseAxios.success = responseAxios.status != 400 || responseAxios.status != 500;\r\n            }\r\n        });\r\n\r\n        return { ...responseAxios };\r\n    },\r\n    forgetPassword: async (username, email) => {\r\n        const params = {\r\n            'name': username,\r\n            'email': email,\r\n        }\r\n            \r\n        let responseAxios = {};\r\n\r\n        await axios.post(`${URL.base}${URL.user.forgetPassword}`, params).then((response) => {\r\n            responseAxios = response.data;\r\n        }).catch((error) => {\r\n            responseAxios = error.response.data;\r\n            if (responseAxios['success'] == undefined) {\r\n                responseAxios.success = responseAxios.status != 400 || responseAxios.status != 500;\r\n            }\r\n        });\r\n\r\n        return { ...responseAxios };\r\n    },\r\n    recoverPassword: async (password, passwordConfirm, access_token) => {\r\n        const params = {\r\n            'password': password,\r\n            'passwordConfirm': passwordConfirm\r\n        }\r\n\r\n        const config = {\r\n            headers: { 'Authorization': `Bearer ${access_token}` }\r\n        };\r\n\r\n        let responseAxios = {};\r\n\r\n        await axios.post(`${URL.base}${URL.user.recoverPassword}`, params, config).then((response) => {\r\n            responseAxios = response.data;\r\n        }).catch((error) => {\r\n            responseAxios = error.response.data;\r\n            if (responseAxios['success'] == undefined) {\r\n                responseAxios.success = responseAxios.status != 400 || responseAxios.status != 500;\r\n            }\r\n        });\r\n\r\n        return { ...responseAxios };\r\n    },\r\n    getAllClients: async access_token => {\r\n        const config = {\r\n            headers: { 'Authorization': `Bearer ${access_token}` }\r\n        };\r\n\r\n        let responseAxios = {};\r\n\r\n        await axios.get(`${URL.base}${URL.client.getAll}`, config).then((response) => {\r\n            responseAxios = response.data;\r\n        }).catch((error) => {\r\n            responseAxios = error.response.data;\r\n            if (responseAxios['success'] == undefined) {\r\n                responseAxios.success = responseAxios.status != 400 || responseAxios.status != 500;\r\n            }\r\n        });\r\n\r\n        return { ...responseAxios };\r\n    },\r\n}","C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Containers\\SignupScreen\\index.js",["187","188","189","190","191","192"],[],"//Imports react\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n//Hooks\r\nimport { useAuth } from '../../Hooks/auth';\r\n\r\n//Styles\r\nimport {\r\n    TextAnchor,\r\n    SpanTitle,\r\n    ContainerTextAnchor,\r\n    SpanErrorMessage\r\n} from './styles';\r\n\r\n//Components\r\nimport Form from '../../Components/Form';\r\nimport Input from '../../Components/Input';\r\nimport Button from '../../Components/Button';\r\n\r\nexport default function LoginScreen() {\r\n    //Messages\r\n    const createUserDefaultString = 'Voce ja possui uma conta?';\r\n    const createUserOverString = 'Faca login agora';\r\n    const emptyInputUsernameString = 'O campo usuario nao pode ser vazio';\r\n    const notInRangeInputPasswordString = 'O campo senha deve ter entre 6 e 50 caracteres';\r\n    const notEmailValidationInputEmailString = 'O campo email nao e um email valido';\r\n\r\n    //Components name\r\n    const titleString = 'Cadastrar';\r\n    const placeholderUserInputString = 'Usuario';\r\n    const placeholderPasswordInputString = 'Senha';\r\n    const placeholderEmailInputString = 'Email';\r\n    const buttonSendString = 'Criar'\r\n\r\n    //API validations\r\n    const InputNameString = 'Name';\r\n    const InputPasswordString = 'Password';\r\n    const InputEmailString = 'Email';\r\n\r\n    //useStates\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [createUserAnchor, setCreateUserAnchor] = useState(createUserDefaultString);\r\n    const [errorStyleUsername, setErrorStyleUsername] = useState(false);\r\n    const [errorStylePassword, setErrorStylePassword] = useState(false);\r\n    const [errorStyleEmail, setErrorStyleEmail] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState();\r\n\r\n    //Auth\r\n    const { errorMessage: errorMessageApi, signup, setErrorMessage: setErrorMessageAPI } = useAuth();\r\n\r\n    //Navigate\r\n    const navigate = useNavigate();\r\n\r\n    const InputErrorApiStyleHandle = (key = undefined) => {\r\n        setErrorStyleUsername(key == InputNameString);\r\n        setErrorStylePassword(key == InputPasswordString);\r\n        setErrorStyleEmail(key == InputEmailString);\r\n    };\r\n\r\n    const InputErrorStyleHandle = () => {\r\n        let isAllInputFull = true;\r\n\r\n        const isPasswordError = password === '' || (password.length < 6 || password.length > 50);\r\n        setErrorStylePassword(isPasswordError);\r\n        if (isPasswordError) {\r\n            setErrorMessage(notInRangeInputPasswordString)\r\n            isAllInputFull = false;\r\n        }\r\n\r\n        const regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        const isEmailError = !regex.test(email);\r\n        setErrorStyleEmail(isEmailError);\r\n        if (isEmailError) {\r\n            setErrorMessage(notEmailValidationInputEmailString);\r\n            isAllInputFull = false;\r\n        }\r\n\r\n        const isUsernameError = username === '';\r\n        setErrorStyleUsername(isUsernameError);\r\n        if (isUsernameError) {    \r\n            setErrorMessage(emptyInputUsernameString);\r\n            isAllInputFull = false;\r\n        }\r\n        return isAllInputFull;\r\n    };\r\n\r\n    const HandleButtonSubmitOnClick = async () => {\r\n        if (InputErrorStyleHandle()) {\r\n            if (await signup(username, email, password, 'collaborator')) {\r\n                alert('Usuario cadastrado com sucesso');\r\n                navigate('/');\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setErrorMessageAPI(false);\r\n    }, []);\r\n\r\n    //Every time singup and return erro update states\r\n    useEffect(() => {\r\n        setErrorMessage(errorMessageApi?.message);\r\n        InputErrorApiStyleHandle(errorMessageApi?.key);\r\n    }, [errorMessageApi]);\r\n\r\n    return (\r\n        <Form>\r\n            <SpanTitle>{titleString}</SpanTitle>\r\n\r\n            <Input isErrorStyle={errorStyleUsername}\r\n                placeholderString={placeholderUserInputString}\r\n                value={username}\r\n                onChange={event => setUsername(event.target.value)}\r\n            />\r\n\r\n            <Input isErrorStyle={errorStyleEmail}\r\n                placeholderString={placeholderEmailInputString}\r\n                value={email}\r\n                onChange={event => setEmail(event.target.value)}\r\n                type='email'\r\n            />\r\n\r\n            <Input isErrorStyle={errorStylePassword}\r\n                placeholderString={placeholderPasswordInputString}\r\n                value={password}\r\n                onChange={event => setPassword(event.target.value)}\r\n                type='password'\r\n            />\r\n\r\n            {errorMessage && <SpanErrorMessage>{errorMessage}</SpanErrorMessage>}\r\n\r\n            <Button onClick={HandleButtonSubmitOnClick}\r\n                text={buttonSendString}\r\n            />\r\n\r\n            <ContainerTextAnchor>\r\n                <TextAnchor to='/'\r\n                    onMouseOver={() => setCreateUserAnchor(createUserOverString)}\r\n                    onMouseOut={() => setCreateUserAnchor(createUserDefaultString)}>\r\n                    {createUserAnchor}\r\n                </TextAnchor>\r\n            </ContainerTextAnchor>          \r\n        </Form>\r\n    );\r\n}\r\n","C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Containers\\SigninScreen\\index.js",["193","194","195","196"],[],"//Imports react\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n//Hooks\r\nimport { useAuth } from '../../Hooks/auth';\r\n\r\n//Styles\r\nimport {\r\n    TextAnchor,\r\n    SpanTitle,\r\n    ContainerTextAnchor,\r\n    SpanErrorMessage\r\n} from './styles';\r\n\r\n//Components\r\nimport Form from '../../Components/Form';\r\nimport Input from '../../Components/Input';\r\nimport Button from '../../Components/Button';\r\nimport Loading from '../../Components/Loading';\r\n\r\nexport default function LoginScreen() {\r\n    //Messages\r\n    const createUserDefaultString = 'Voce nao possui uma conta?';\r\n    const createUserOverString = 'Crie sua conta agora';\r\n    const forgetPasswordDefaultString = 'Esqueceu sua senha?';\r\n    const forgetPasswordOverString = 'Recupere agora';\r\n    const emptyInputUsernameString = 'O campo usuario nao pode ser vazio';\r\n    const emptyInputPasswordString = 'O campo senha deve ter entre 6 e 50 caracteres';\r\n\r\n    //Components name\r\n    const titleString = 'Login';\r\n    const placeholderUserInputString = 'Usuario';\r\n    const placeholderPasswordInputString = 'Senha';\r\n    const buttonSendString = 'Entrar'\r\n\r\n    //API validations\r\n    const InputNameString = 'Name';\r\n    const InputPasswordString = 'Password';\r\n\r\n    //useStates\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [createUserAnchor, setCreateUserAnchor] = useState(createUserDefaultString);\r\n    const [forgetPasswordAnchor, setForgetPasswordAnchor] = useState(forgetPasswordDefaultString);\r\n    const [errorStyleUsername, setErrorStyleUsername] = useState(false);\r\n    const [errorStylePassword, setErrorStylePassword] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    //Auth\r\n    const { user, errorMessage: errorMessageApi, signed, signin, setErrorMessage: setErrorMessageAPI } = useAuth();\r\n\r\n    //Navigate\r\n    const navigate = useNavigate();\r\n\r\n    const InputErrorApiStyleHandle = (key = undefined) => {\r\n        setErrorStyleUsername(key == InputNameString);\r\n        setErrorStylePassword(key == InputPasswordString)\r\n    };\r\n\r\n    const InputErrorStyleHandle = () => {\r\n        let isAllInputFull = true;\r\n\r\n        const isPasswordError = password === '' || (password.length < 6 || password.length > 50);\r\n        setErrorStylePassword(isPasswordError);\r\n        if (isPasswordError) {\r\n            setErrorMessage(emptyInputPasswordString)\r\n            isAllInputFull = false;\r\n        }\r\n\r\n        const isUsernameError = username === '';\r\n        setErrorStyleUsername(isUsernameError);\r\n        if (isUsernameError) {    \r\n            setErrorMessage(emptyInputUsernameString);\r\n            isAllInputFull = false;\r\n        }\r\n        return isAllInputFull;\r\n    };\r\n\r\n    const HandleButtonSubmitOnClick = async () => {\r\n        setIsLoading(true);\r\n        if (InputErrorStyleHandle()) {\r\n            await signin(username, password);\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        setErrorMessageAPI(false);\r\n    }, []);\r\n\r\n    //Every time singin and return erro update states\r\n    useEffect(() => {\r\n        setErrorMessage(errorMessageApi?.message);\r\n        InputErrorApiStyleHandle(errorMessageApi?.key);\r\n    }, [errorMessageApi]);\r\n\r\n    //When is signed navigate to type user screen\r\n    useEffect(() => {\r\n        if (signed) {\r\n            navigate(`/${user.type}`);\r\n        }\r\n    }, [signed]);\r\n    return (\r\n        <>\r\n            {isLoading && <Loading />}\r\n            <Form>\r\n                <SpanTitle>{titleString}</SpanTitle>\r\n\r\n                <Input isErrorStyle={errorStyleUsername}\r\n                    placeholderString={placeholderUserInputString}\r\n                    value={username}\r\n                    onChange={event => setUsername(event.target.value)}\r\n                />\r\n\r\n                <Input isErrorStyle={errorStylePassword}\r\n                    placeholderString={placeholderPasswordInputString}\r\n                    value={password}\r\n                    onChange={event => setPassword(event.target.value)}\r\n                    type='password'\r\n                />\r\n\r\n                {errorMessage && <SpanErrorMessage>{errorMessage}</SpanErrorMessage>}\r\n\r\n                <Button onClick={HandleButtonSubmitOnClick}\r\n                    text={buttonSendString}\r\n                />\r\n\r\n                <ContainerTextAnchor>\r\n                    <TextAnchor to='/signup'\r\n                        onMouseOver={() => setCreateUserAnchor(createUserOverString)}\r\n                        onMouseOut={() => setCreateUserAnchor(createUserDefaultString)}>\r\n                        {createUserAnchor}\r\n                    </TextAnchor>\r\n                    <TextAnchor to='/forgetPassword'\r\n                        onMouseOver={() => setForgetPasswordAnchor(forgetPasswordOverString)}\r\n                        onMouseOut={() => setForgetPasswordAnchor(forgetPasswordDefaultString)}>\r\n                        {forgetPasswordAnchor}\r\n                    </TextAnchor>\r\n                </ContainerTextAnchor>\r\n                        \r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Containers\\ForgetPasswordScreen\\index.js",["197","198","199","200","201"],[],"//Imports react\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n//Hooks\r\nimport { useAuth } from '../../Hooks/auth';\r\n\r\n//Styles\r\nimport {\r\n    TextAnchor,\r\n    SpanTitle,\r\n    ContainerTextAnchor,\r\n    SpanErrorMessage,\r\n} from './styles';\r\n\r\n//Components\r\nimport Form from '../../Components/Form';\r\nimport Input from '../../Components/Input';\r\nimport Button from '../../Components/Button';\r\nimport Loading from '../../Components/Loading';\r\n\r\nexport default function LoginScreen() {\r\n    //Messages\r\n    const signinDefaultString = 'Lembrou sua senha?';\r\n    const signinOverString = 'Faca login agora';\r\n    const emptyInputUsernameString = 'O campo usuario nao pode ser vazio';\r\n    const notEmailValidationInputEmailString = 'O campo email nao e um email valido';\r\n\r\n    //Components name\r\n    const titleString = 'Esqueceu a senha?';\r\n    const placeholderUserInputString = 'Usuario';\r\n    const placeholderEmailInputString = 'Email';\r\n    const buttonSendString = 'Restaurar'\r\n\r\n    //API validations\r\n    const InputNameString = 'Name';\r\n    const InputEmailString = 'Email';\r\n\r\n    //useStates\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [signinAnchor, setSigninAnchor] = useState(signinDefaultString);\r\n    const [errorStyleUsername, setErrorStyleUsername] = useState(false);\r\n    const [errorStyleEmail, setErrorStyleEmail] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState();\r\n    const [isLoading, setIsLoading] = useState();\r\n\r\n    //Auth\r\n    const { errorMessage: errorMessageApi, forgetPassword, setErrorMessage: setErrorMessageAPI } = useAuth();\r\n\r\n    //Navigate\r\n    const navigate = useNavigate();\r\n\r\n    const InputErrorApiStyleHandle = (key = undefined) => {\r\n        setErrorStyleUsername(key == InputNameString);\r\n        setErrorStyleEmail(key == InputEmailString);\r\n    };\r\n\r\n    const InputErrorStyleHandle = () => {\r\n        let isAllInputFull = true;\r\n\r\n        const regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        const isEmailError = !regex.test(email);\r\n        setErrorStyleEmail(isEmailError);\r\n        if (isEmailError) {\r\n            setErrorMessage(notEmailValidationInputEmailString);\r\n            isAllInputFull = false;\r\n        }\r\n\r\n        const isUsernameError = username === '';\r\n        setErrorStyleUsername(isUsernameError);\r\n        if (isUsernameError) {\r\n            setErrorMessage(emptyInputUsernameString);\r\n            isAllInputFull = false;\r\n        }\r\n        return isAllInputFull;\r\n    };\r\n\r\n    const HandleButtonSubmitOnClick = async () => {\r\n        if (InputErrorStyleHandle()) {\r\n            setIsLoading(true);\r\n            if (await forgetPassword(username, email)) {\r\n                setIsLoading(false);\r\n                alert('O email de recuperacao de senha foi enviado com sucesso');\r\n                navigate('/');\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setErrorMessageAPI(false);\r\n    }, []);\r\n\r\n    //Every time singup and return erro update states\r\n    useEffect(() => {\r\n        setErrorMessage(errorMessageApi?.message);\r\n        InputErrorApiStyleHandle(errorMessageApi?.key);\r\n    }, [errorMessageApi]);\r\n\r\n    return (\r\n        <>\r\n            {isLoading && <Loading />}\r\n            <Form>\r\n                <SpanTitle>{titleString}</SpanTitle>\r\n\r\n                <Input isErrorStyle={errorStyleUsername}\r\n                    placeholderString={placeholderUserInputString}\r\n                    value={username}\r\n                    onChange={event => setUsername(event.target.value)}\r\n                />\r\n\r\n                <Input isErrorStyle={errorStyleEmail}\r\n                    placeholderString={placeholderEmailInputString}\r\n                    value={email}\r\n                    onChange={event => setEmail(event.target.value)}\r\n                    type='email'\r\n                />\r\n\r\n                {errorMessage && <SpanErrorMessage>{errorMessage}</SpanErrorMessage>}\r\n\r\n                <Button onClick={HandleButtonSubmitOnClick}\r\n                    text={buttonSendString}\r\n                />\r\n\r\n                <ContainerTextAnchor>\r\n                    <TextAnchor to='/'\r\n                        onMouseOver={() => setSigninAnchor(signinOverString)}\r\n                        onMouseOut={() => setSigninAnchor(signinDefaultString)}>\r\n                        {signinAnchor}\r\n                    </TextAnchor>\r\n                </ContainerTextAnchor>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Containers\\ClientsDataScreen\\index.js",[],[],"C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Containers\\NotFoundScreen\\index.js",["202"],[],"﻿//Imports react\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n//Styles\r\nimport { Container, ContainerMessage, SpanTitle, SpanDescription, Icon } from './styles'\r\n\r\nexport default function NotFoundScreen() {\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <Container onClick={() => {navigate('/')}}>\r\n            <ContainerMessage>\r\n                <SpanTitle>\r\n                    4\r\n                    <Icon className=\"fa-solid fa-ban\"/>\r\n                    4\r\n                </SpanTitle>\r\n                <SpanDescription>A página não foi encontrada</SpanDescription>\r\n            </ContainerMessage>\r\n        </Container>\r\n    );\r\n}","C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Containers\\RecoverPasswordScreen\\index.js",["203","204","205"],[],"//Imports react\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n//Hooks\r\nimport { useAuth } from '../../Hooks/auth';\r\n\r\n//Styles\r\nimport {\r\n    TextAnchor,\r\n    SpanTitle,\r\n    ContainerTextAnchor,\r\n    SpanErrorMessage,\r\n} from './styles';\r\n\r\n//Components\r\nimport Form from '../../Components/Form';\r\nimport Input from '../../Components/Input';\r\nimport Button from '../../Components/Button';\r\nimport Loading from '../../Components/Loading';\r\n\r\nexport default function LoginScreen(token) {\r\n    //Messages\r\n    const signinDefaultString = 'Lembrou sua senha?';\r\n    const signinOverString = 'Faca login agora';\r\n    const emptyInputPasswordString = 'O campo senha deve ter entre 6 e 50 caracteres';\r\n    const notIgualsInputPasswordsString = 'Os campos de senha devem ser iguais';\r\n\r\n    //Components name\r\n    const titleString = 'Troque a senha';\r\n    const placeholderPasswordInputString = 'Senha';\r\n    const placeholderPasswordConfirmInputString = 'Confirmacao de senha';\r\n    const buttonSendString = 'Trocar senha'\r\n\r\n    //API validations\r\n    const InputPasswordString = 'Password';\r\n    const InputPasswordConfirmString = 'PasswordConfirm';\r\n\r\n    //useStates\r\n    const [password, setPassword] = useState('');\r\n    const [passwordConfirm, setPasswordConfirm] = useState('');\r\n    const [signinAnchor, setSigninAnchor] = useState(signinDefaultString);\r\n    const [errorStylePassword, setErrorStylePassword] = useState(false);\r\n    const [errorStylePasswordConfirm, setErrorStylePasswordConfirm] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState();\r\n    const [isLoading, setIsLoading] = useState();\r\n\r\n    //Auth\r\n    const { errorMessage: errorMessageApi, recoverPassword, setErrorMessage: setErrorMessageAPI } = useAuth();\r\n\r\n    //Navigate\r\n    const navigate = useNavigate();\r\n\r\n    const InputErrorApiStyleHandle = (key = undefined) => {\r\n        setErrorStylePassword(key == InputPasswordString);\r\n        setErrorStylePasswordConfirm(key == InputPasswordConfirmString);\r\n    };\r\n\r\n    const InputErrorStyleHandle = () => {\r\n        let isAllInputFull = true;\r\n\r\n        const isPasswordError = password === '' || (password.length < 6 || password.length > 50);\r\n        setErrorStylePassword(isPasswordError);\r\n        if (isPasswordError) {\r\n            setErrorMessage(emptyInputPasswordString)\r\n            isAllInputFull = false;\r\n        }\r\n\r\n        const isPasswordConfirmError = passwordConfirm === '' || (passwordConfirm.length < 6 || passwordConfirm.length > 50);\r\n        setErrorStylePasswordConfirm(isPasswordError);\r\n        if (isPasswordConfirmError) {\r\n            setErrorMessage(emptyInputPasswordString)\r\n            isAllInputFull = false;\r\n        }\r\n\r\n        const isPasswordsDifferent = password !== passwordConfirm;\r\n        setErrorStylePasswordConfirm(isPasswordsDifferent);\r\n        if (isPasswordsDifferent) {\r\n            setErrorMessage(notIgualsInputPasswordsString);\r\n            isAllInputFull = false;\r\n        }\r\n\r\n        return isAllInputFull;\r\n    };\r\n\r\n    const HandleButtonSubmitOnClick = async () => {\r\n        if (InputErrorStyleHandle()) {\r\n            setIsLoading(true);\r\n            if (await recoverPassword(password, passwordConfirm, token.token)) {\r\n                setIsLoading(false);\r\n                alert('A senha foi redefinida com sucesso, favor logar com a nova senha');\r\n                navigate('/');\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setErrorMessageAPI(false);\r\n    }, []);\r\n\r\n    //Every time singup and return erro update states\r\n    useEffect(() => {\r\n        setErrorMessage(errorMessageApi?.message);\r\n        InputErrorApiStyleHandle(errorMessageApi?.key);\r\n    }, [errorMessageApi]);\r\n\r\n    return (\r\n        <>\r\n            {isLoading && <Loading />}\r\n            <Form>\r\n                <SpanTitle>{titleString}</SpanTitle>\r\n\r\n                <Input isErrorStyle={errorStylePassword}\r\n                    placeholderString={placeholderPasswordInputString}\r\n                    value={password}\r\n                    onChange={event => setPassword(event.target.value)}\r\n                    type='password'\r\n                />\r\n\r\n                <Input isErrorStyle={errorStylePasswordConfirm}\r\n                    placeholderString={placeholderPasswordConfirmInputString}\r\n                    value={passwordConfirm}\r\n                    onChange={event => setPasswordConfirm(event.target.value)}\r\n                    type='password'\r\n                />\r\n\r\n                {errorMessage && <SpanErrorMessage>{errorMessage}</SpanErrorMessage>}\r\n\r\n                <Button onClick={HandleButtonSubmitOnClick}\r\n                    text={buttonSendString}\r\n                />\r\n\r\n                <ContainerTextAnchor>\r\n                    <TextAnchor to='/'\r\n                        onMouseOver={() => setSigninAnchor(signinOverString)}\r\n                        onMouseOut={() => setSigninAnchor(signinDefaultString)}>\r\n                        {signinAnchor}\r\n                    </TextAnchor>\r\n                </ContainerTextAnchor>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Services\\API\\settings.js",[],[],"C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Containers\\SignupScreen\\styles.js",[],[],"C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Containers\\ForgetPasswordScreen\\styles.js",[],[],"C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Containers\\SigninScreen\\styles.js",[],[],"C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Containers\\ClientsDataScreen\\styles.js",[],[],"C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Containers\\NotFoundScreen\\styles.js",[],[],"C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Containers\\RecoverPasswordScreen\\styles.js",[],[],"C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Components\\Form\\index.js",[],[],"C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Components\\Loading\\index.js",[],[],"C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Components\\Button\\index.js",[],[],"C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Components\\Input\\index.js",[],[],"C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Components\\Form\\styles.js",[],[],"C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Components\\Loading\\styles.js",[],[],"C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Components\\Button\\styles.js",[],[],"C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Components\\Input\\styles.js",[],[],"C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Services\\MostQI\\index.js",[],[],"C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Services\\MostQI\\settings.js",[],[],[],"C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Containers\\CreateClientScreen\\index.js",["206"],[],"C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Utils\\Utils.js",[],[],"C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Components\\ModalImageCropper\\index.js",["207"],[],"C:\\Users\\Marcos\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Components\\ModalImageCropper\\styles.js",[],[],{"ruleId":"208","severity":1,"message":"209","line":29,"column":8,"nodeType":"210","endLine":29,"endColumn":28,"suggestions":"211"},{"ruleId":"212","severity":1,"message":"213","line":18,"column":19,"nodeType":"214","messageId":"215","endLine":18,"endColumn":21},{"ruleId":"212","severity":1,"message":"216","line":17,"column":42,"nodeType":"214","messageId":"215","endLine":17,"endColumn":44},{"ruleId":"212","severity":1,"message":"213","line":19,"column":62,"nodeType":"214","messageId":"215","endLine":19,"endColumn":64},{"ruleId":"212","severity":1,"message":"213","line":19,"column":93,"nodeType":"214","messageId":"215","endLine":19,"endColumn":95},{"ruleId":"212","severity":1,"message":"216","line":39,"column":42,"nodeType":"214","messageId":"215","endLine":39,"endColumn":44},{"ruleId":"212","severity":1,"message":"213","line":40,"column":62,"nodeType":"214","messageId":"215","endLine":40,"endColumn":64},{"ruleId":"212","severity":1,"message":"213","line":40,"column":93,"nodeType":"214","messageId":"215","endLine":40,"endColumn":95},{"ruleId":"212","severity":1,"message":"216","line":57,"column":42,"nodeType":"214","messageId":"215","endLine":57,"endColumn":44},{"ruleId":"212","severity":1,"message":"213","line":59,"column":62,"nodeType":"214","messageId":"215","endLine":59,"endColumn":64},{"ruleId":"212","severity":1,"message":"213","line":59,"column":93,"nodeType":"214","messageId":"215","endLine":59,"endColumn":95},{"ruleId":"212","severity":1,"message":"216","line":77,"column":42,"nodeType":"214","messageId":"215","endLine":77,"endColumn":44},{"ruleId":"212","severity":1,"message":"213","line":78,"column":62,"nodeType":"214","messageId":"215","endLine":78,"endColumn":64},{"ruleId":"212","severity":1,"message":"213","line":78,"column":93,"nodeType":"214","messageId":"215","endLine":78,"endColumn":95},{"ruleId":"212","severity":1,"message":"216","line":100,"column":42,"nodeType":"214","messageId":"215","endLine":100,"endColumn":44},{"ruleId":"212","severity":1,"message":"213","line":101,"column":62,"nodeType":"214","messageId":"215","endLine":101,"endColumn":64},{"ruleId":"212","severity":1,"message":"213","line":101,"column":93,"nodeType":"214","messageId":"215","endLine":101,"endColumn":95},{"ruleId":"212","severity":1,"message":"216","line":118,"column":42,"nodeType":"214","messageId":"215","endLine":118,"endColumn":44},{"ruleId":"212","severity":1,"message":"213","line":119,"column":62,"nodeType":"214","messageId":"215","endLine":119,"endColumn":64},{"ruleId":"212","severity":1,"message":"213","line":119,"column":93,"nodeType":"214","messageId":"215","endLine":119,"endColumn":95},{"ruleId":"212","severity":1,"message":"216","line":58,"column":35,"nodeType":"214","messageId":"215","endLine":58,"endColumn":37},{"ruleId":"212","severity":1,"message":"216","line":59,"column":35,"nodeType":"214","messageId":"215","endLine":59,"endColumn":37},{"ruleId":"212","severity":1,"message":"216","line":60,"column":32,"nodeType":"214","messageId":"215","endLine":60,"endColumn":34},{"ruleId":"217","severity":1,"message":"218","line":73,"column":33,"nodeType":"219","messageId":"220","endLine":73,"endColumn":34,"suggestions":"221"},{"ruleId":"217","severity":1,"message":"218","line":73,"column":58,"nodeType":"219","messageId":"220","endLine":73,"endColumn":59,"suggestions":"222"},{"ruleId":"208","severity":1,"message":"223","line":101,"column":8,"nodeType":"210","endLine":101,"endColumn":10,"suggestions":"224"},{"ruleId":"212","severity":1,"message":"216","line":58,"column":35,"nodeType":"214","messageId":"215","endLine":58,"endColumn":37},{"ruleId":"212","severity":1,"message":"216","line":59,"column":35,"nodeType":"214","messageId":"215","endLine":59,"endColumn":37},{"ruleId":"208","severity":1,"message":"223","line":90,"column":8,"nodeType":"210","endLine":90,"endColumn":10,"suggestions":"225"},{"ruleId":"208","severity":1,"message":"226","line":103,"column":8,"nodeType":"210","endLine":103,"endColumn":16,"suggestions":"227"},{"ruleId":"212","severity":1,"message":"216","line":55,"column":35,"nodeType":"214","messageId":"215","endLine":55,"endColumn":37},{"ruleId":"212","severity":1,"message":"216","line":56,"column":32,"nodeType":"214","messageId":"215","endLine":56,"endColumn":34},{"ruleId":"217","severity":1,"message":"218","line":62,"column":33,"nodeType":"219","messageId":"220","endLine":62,"endColumn":34,"suggestions":"228"},{"ruleId":"217","severity":1,"message":"218","line":62,"column":58,"nodeType":"219","messageId":"220","endLine":62,"endColumn":59,"suggestions":"229"},{"ruleId":"208","severity":1,"message":"223","line":92,"column":8,"nodeType":"210","endLine":92,"endColumn":10,"suggestions":"230"},{"ruleId":"231","severity":1,"message":"232","line":1,"column":1,"nodeType":"233","messageId":"215","fix":"234"},{"ruleId":"212","severity":1,"message":"216","line":55,"column":35,"nodeType":"214","messageId":"215","endLine":55,"endColumn":37},{"ruleId":"212","severity":1,"message":"216","line":56,"column":42,"nodeType":"214","messageId":"215","endLine":56,"endColumn":44},{"ruleId":"208","severity":1,"message":"223","line":99,"column":8,"nodeType":"210","endLine":99,"endColumn":10,"suggestions":"235"},{"ruleId":"236","severity":1,"message":"237","line":13,"column":12,"nodeType":"238","messageId":"239","endLine":13,"endColumn":24},{"ruleId":null,"fatal":true,"severity":2,"message":"240","line":38,"column":4},"react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'localStorage'. Either exclude it or remove the dependency array. Outer scope values like 'localStorage' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["241"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["242","243"],["244","245"],"React Hook useEffect has a missing dependency: 'setErrorMessageAPI'. Either include it or remove the dependency array.",["246"],["247"],"React Hook useEffect has missing dependencies: 'navigate' and 'user.type'. Either include them or remove the dependency array.",["248"],["249","250"],["251","252"],["253"],"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program",{"range":"254","text":"255"},["256"],"no-unused-vars","'croppedImage' is assigned a value but never used.","Identifier","unusedVar","Parsing error: Unexpected token, expected \",\" (38:4)",{"desc":"257","fix":"258"},{"messageId":"259","fix":"260","desc":"261"},{"messageId":"262","fix":"263","desc":"264"},{"messageId":"259","fix":"265","desc":"261"},{"messageId":"262","fix":"266","desc":"264"},{"desc":"267","fix":"268"},{"desc":"267","fix":"269"},{"desc":"270","fix":"271"},{"messageId":"259","fix":"272","desc":"261"},{"messageId":"262","fix":"273","desc":"264"},{"messageId":"259","fix":"274","desc":"261"},{"messageId":"262","fix":"275","desc":"264"},{"desc":"267","fix":"276"},[-1,0],"",{"desc":"267","fix":"277"},"Update the dependencies array to be: [user]",{"range":"278","text":"279"},"removeEscape",{"range":"280","text":"255"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"281","text":"282"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"283","text":"255"},{"range":"284","text":"282"},"Update the dependencies array to be: [setErrorMessageAPI]",{"range":"285","text":"286"},{"range":"287","text":"286"},"Update the dependencies array to be: [navigate, signed, user.type]",{"range":"288","text":"289"},{"range":"290","text":"255"},{"range":"291","text":"282"},{"range":"292","text":"255"},{"range":"293","text":"282"},{"range":"294","text":"286"},{"range":"295","text":"286"},[934,954],"[user]",[2630,2631],[2630,2630],"\\",[2655,2656],[2655,2655],[3655,3657],"[setErrorMessageAPI]",[3154,3156],[3534,3542],"[navigate, signed, user.type]",[2058,2059],[2058,2058],[2083,2084],[2083,2083],[3157,3159],[3561,3563]]