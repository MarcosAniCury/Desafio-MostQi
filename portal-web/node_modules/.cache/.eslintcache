[{"C:\\Users\\curym\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\index.js":"1","C:\\Users\\curym\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Containers\\LoginScreen\\index.js":"2","C:\\Users\\curym\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Services\\API\\index.js":"3","C:\\Users\\curym\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Services\\API\\settings.js":"4"},{"size":265,"mtime":1662778187043,"results":"5","hashOfConfig":"6"},{"size":1305,"mtime":1662778187041,"results":"7","hashOfConfig":"6"},{"size":591,"mtime":1662778187042,"results":"8","hashOfConfig":"6"},{"size":173,"mtime":1662778187042,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2ue5dr",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\curym\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\index.js",[],[],"C:\\Users\\curym\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Containers\\LoginScreen\\index.js",["24"],[],"import React, { useCallback, useState } from 'react';\r\nimport { API } from '../../Services/API';\r\n\r\nexport default function LoginScreen() {\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [returnApi, setReturnApi] = useState(null);\r\n\r\n    const HandleButtonSubmitOnClick = useCallback(async () => {\r\n        if (username !== '' && password !== '' && email !== '') {\r\n            const response = await API.login(username, email, password);\r\n            setReturnApi(response);\r\n        }\r\n    }, [username, password, email, returnApi, API.lo]);\r\n\r\n    return (\r\n        <div>\r\n            Nome de usuario:\r\n            <input type='text' value={username} onChange={event => setUsername(event.target.value)} id='username' />\r\n            Email:\r\n            <input type='text' value={email} onChange={event => setEmail(event.target.value)} id='email' />\r\n            Senha:\r\n            <input type='text' value={password} onChange={event => setPassword(event.target.value)} id='password' />\r\n            <button onClick={HandleButtonSubmitOnClick}>Submit</button>\r\n            {returnApi?.success && (\r\n                <h1>{returnApi.data.name}</h1>\r\n             )}\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\curym\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Services\\API\\index.js",["25"],[],"import { URL } from './settings';\r\nimport axios from 'axios';\r\n\r\nexport const API = {\r\n    login: async (username, email, password) => {\r\n        const params = {\r\n            \"name\": username,\r\n            \"password\": password,\r\n            \"email\": email\r\n        };\r\n\r\n        let responseAxios = {};\r\n\r\n        await axios.post(URL.base + URL.user.create, params).then((response) => {\r\n            responseAxios = {\r\n                'data': response.data,\r\n                'success': response.status == 201\r\n            }; \r\n        });\r\n\r\n        return { ...responseAxios };\r\n    },\r\n}","C:\\Users\\curym\\Documents\\Git\\desafios-fullstack\\portal-web\\src\\Services\\API\\settings.js",[],[],{"ruleId":"26","severity":1,"message":"27","line":15,"column":8,"nodeType":"28","endLine":15,"endColumn":54,"suggestions":"29"},{"ruleId":"30","severity":1,"message":"31","line":17,"column":44,"nodeType":"32","messageId":"33","endLine":17,"endColumn":46},"react-hooks/exhaustive-deps","React Hook useCallback has unnecessary dependencies: 'API.lo' and 'returnApi'. Either exclude them or remove the dependency array. Outer scope values like 'API.lo' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["34"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"35","fix":"36"},"Update the dependencies array to be: [username, password, email]",{"range":"37","text":"38"},[606,652],"[username, password, email]"]